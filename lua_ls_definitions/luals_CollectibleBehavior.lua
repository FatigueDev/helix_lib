---@meta CollectibleBehavior
---@class CollectibleBehavior: Object
---@field ctor fun(collObj: Collectibletable): CollectibleBehavior
---@field get_ClientSideOptional fun(): boolean
---@field Initialize fun(properties: Jsontable): nil
---@field OnLoaded fun(api: ICoreAPI): nil
---@field OnUnloaded fun(api: ICoreAPI): nil
---@field GetStorageFlags fun(itemstack: ItemStack, handling: EnumHandling&): EnumItemStorageFlags
---@field OnHeldAttackStart fun(slot: ItemSlot, byEntity: EntityAgent, blockSel: BlockSelection, entitySel: EntitySelection, handHandling: EnumHandHandling&, handling: EnumHandling&): nil
---@field OnHeldAttackCancel fun(secondsPassed: Single, slot: ItemSlot, byEntity: EntityAgent, blockSelection: BlockSelection, entitySel: EntitySelection, cancelReason: EnumItemUseCancelReason, handling: EnumHandling&): boolean
---@field OnHeldAttackStep fun(secondsPassed: Single, slot: ItemSlot, byEntity: EntityAgent, blockSelection: BlockSelection, entitySel: EntitySelection, handling: EnumHandling&): boolean
---@field OnHeldAttackStop fun(secondsPassed: Single, slot: ItemSlot, byEntity: EntityAgent, blockSelection: BlockSelection, entitySel: EntitySelection, handling: EnumHandling&): nil
---@field OnHeldInteractStart fun(slot: ItemSlot, byEntity: EntityAgent, blockSel: BlockSelection, entitySel: EntitySelection, firstEvent: boolean, handHandling: EnumHandHandling&, handling: EnumHandling&): nil
---@field OnHeldInteractStep fun(secondsUsed: Single, slot: ItemSlot, byEntity: EntityAgent, blockSel: BlockSelection, entitySel: EntitySelection, handling: EnumHandling&): boolean
---@field OnHeldInteractStop fun(secondsUsed: Single, slot: ItemSlot, byEntity: EntityAgent, blockSel: BlockSelection, entitySel: EntitySelection, handling: EnumHandling&): nil
---@field OnHeldInteractCancel fun(secondsUsed: Single, slot: ItemSlot, byEntity: EntityAgent, blockSel: BlockSelection, entitySel: EntitySelection, cancelReason: EnumItemUseCancelReason, handled: EnumHandling&): boolean
---@field OnBeforeRender fun(capi: ICoreClientAPI, itemstack: ItemStack, target: EnumItemRenderTarget, renderinfo: ItemRenderInfo&): nil
---@field GetHeldInteractionHelp fun(inSlot: ItemSlot, handling: EnumHandling&): WorldInteraction[]
---@field GetToolModes fun(slot: ItemSlot, forPlayer: IClientPlayer, blockSel: BlockSelection): SkillItem[]
---@field GetToolMode fun(slot: ItemSlot, byPlayer: IPlayer, blockSelection: BlockSelection): number
---@field SetToolMode fun(slot: ItemSlot, byPlayer: IPlayer, blockSelection: BlockSelection, toolMode: number): nil
---@field GetHeldItemInfo fun(inSlot: ItemSlot, dsc: stringBuilder, world: IWorldAccessor, withDebugInfo: boolean): nil
---@field GetHeldItemName fun(sb: stringBuilder, itemStack: ItemStack): nil
---@field OnBlockBrokenWith fun(world: IWorldAccessor, byEntity: Entity, itemslot: ItemSlot, blockSel: BlockSelection, dropQuantityMultiplier: Single, bhHandling: EnumHandling&): boolean
---@field OnBlockBreaking fun(player: IPlayer, blockSel: BlockSelection, itemslot: ItemSlot, remainingResistance: Single, dt: Single, counter: number, handled: EnumHandling&): Single
---@field GetHeldTpHitAnimation fun(slot: ItemSlot, byEntity: Entity, bhHandling: EnumHandling&): string
---@field GetHeldReadyAnimation fun(activeHotbarSlot: ItemSlot, forEntity: Entity, hand: EnumHand, bhHandling: EnumHandling&): string
---@field GetHeldTpIdleAnimation fun(activeHotbarSlot: ItemSlot, forEntity: Entity, hand: EnumHand, bhHandling: EnumHandling&): string
---@field GetHeldTpUseAnimation fun(activeHotbarSlot: ItemSlot, forEntity: Entity, bhHandling: EnumHandling&): string
---@field GetType fun(): any
---@field ToString fun(): string
---@field Equals fun(obj: table): boolean
---@field GetHashCode fun(): number
---@field ClientSideOptional boolean
---@field collObj boolean
---@field propertiesAtString boolean
CollectibleBehavior = {}
