---@meta IWorldAccessor
---@class IWorldAccessor
---@field get_Config fun(): ITreeAttribute
---@field get_DefaultSpawnPosition fun(): EntityPos
---@field get_FrameProfiler fun(): FrameProfilerUtil
---@field get_Api fun(): ICoreAPI
---@field get_Claims fun(): ILandClaimAPI
---@field get_LoadedChunkIndices fun(): Int64[]
---@field get_LoadedMapChunkIndices fun(): Int64[]
---@field get_BlockLightLevels fun(): Single[]
---@field get_SunLightLevels fun(): Single[]
---@field get_SeaLevel fun(): number
---@field get_Seed fun(): number
---@field get_SavegameIdentifier fun(): string
---@field get_SunBrightness fun(): number
---@field get_EntityDebugMode fun(): boolean
---@field get_AssetManager fun(): IAssetManager
---@field get_Logger fun(): ILogger
---@field get_Side fun(): EnumAppSide
---@field get_BlockAccessor fun(): IBlockAccessor
---@field get_BulkBlockAccessor fun(): IBulkBlockAccessor
---@field get_ClassRegistry fun(): IClassRegistryAPI
---@field get_Calendar fun(): IGameCalendar
---@field get_CollisionTester fun(): CollisionTester
---@field get_Rand fun(): Random
---@field get_ElapsedMilliseconds fun(): Int64
---@field get_Collectibles fun(): any[]
---@field get_Blocks fun(): Iany[]
---@field get_Items fun(): Iany[]
---@field get_EntityTypes fun(): any[]
---@field get_EntityTypeCodes fun(): any[]
---@field get_GridRecipes fun(): any[]
---@field GetRecipeRegistry fun(code: string): RecipeRegistryBase
---@field get_DefaultEntityTrackingRange fun(): number
---@field GetItem fun(itemId: number): Item
---@field GetBlock fun(blockId: number): Block
---@field SearchBlocks fun(wildcard: AssetLocation): Block[]
---@field SearchItems fun(wildcard: AssetLocation): Item[]
---@field GetItem fun(itemCode: AssetLocation): Item
---@overload fun(blockCode: AssetLocation): Block
---@field GetEntityType fun(entityCode: AssetLocation): EntityProperties
---@field SpawnItemEntity fun(itemstack: ItemStack, position: Vec3d, velocity: Vec3d): Entity
---@field SpawnEntity fun(entity: Entity): nil
---@field GetEntitiesAround fun(position: Vec3d, horRange: Single, vertRange: Single, matches: ActionConsumable`1): Entity[]
---@field GetEntitiesInsideCuboid fun(startPos: BlockPos, endPos: BlockPos, matches: ActionConsumable`1): Entity[]
---@field GetPlayersAround fun(position: Vec3d, horRange: Single, vertRange: Single, matches: ActionConsumable`1): IPlayer[]
---@field GetNearestEntity fun(position: Vec3d, horRange: Single, vertRange: Single, matches: ActionConsumable`1): Entity
---@field GetEntityById fun(entityId: Int64): Entity
---@field GetIntersectingEntities fun(basePos: BlockPos, collisionBoxes: Cuboidf[], matches: ActionConsumable`1): Entity[]
---@field NearestPlayer fun(x: Double, y: Double, z: Double): IPlayer
---@field get_AllOnlinePlayers fun(): IPlayer[]
---@field get_AllPlayers fun(): IPlayer[]
---@field PlayerByUid fun(playerUid: string): IPlayer
---@field PlaySoundAt fun(location: AssetLocation, posx: Double, posy: Double, posz: Double, dualCallByPlayer: IPlayer, randomizePitch: boolean, range: Single, volume: Single): nil
---@overload fun(location: AssetLocation, atEntity: Entity, dualCallByPlayer: IPlayer, randomizePitch: boolean, range: Single, volume: Single): nil
---@overload fun(location: AssetLocation, atEntity: Entity, dualCallByPlayer: IPlayer, pitch: Single, range: Single, volume: Single): nil
---@overload fun(location: AssetLocation, posx: Double, posy: Double, posz: Double, dualCallByPlayer: IPlayer, pitch: Single, range: Single, volume: Single): nil
---@overload fun(location: AssetLocation, posx: Double, posy: Double, posz: Double, dualCallByPlayer: IPlayer, soundType: EnumSoundany, pitch: Single, range: Single, volume: Single): nil
---@overload fun(location: AssetLocation, atPlayer: IPlayer, dualCallByPlayer: IPlayer, randomizePitch: boolean, range: Single, volume: Single): nil
---@field PlaySoundFor fun(location: AssetLocation, forPlayer: IPlayer, randomizePitch: boolean, range: Single, volume: Single): nil
---@overload fun(location: AssetLocation, forPlayer: IPlayer, pitch: Single, range: Single, volume: Single): nil
---@field SpawnParticles fun(quantity: Single, color: number, minPos: Vec3d, maxPos: Vec3d, minVelocity: Vec3f, maxVelocity: Vec3f, lifeLength: Single, gravityEffect: Single, scale: Single, model: EnumParticleModel, dualCallByPlayer: IPlayer): nil
---@overload fun(particlePropertiesProvider: IParticlePropertiesProvider, dualCallByPlayer: IPlayer): nil
---@field SpawnCubeParticles fun(blockPos: BlockPos, pos: Vec3d, radius: Single, quantity: number, scale: Single, dualCallByPlayer: IPlayer, velocity: Vec3f): nil
---@overload fun(pos: Vec3d, item: ItemStack, radius: Single, quantity: number, scale: Single, dualCallByPlayer: IPlayer, velocity: Vec3f): nil
---@field RayTraceForSelection fun(fromPos: Vec3d, toPos: Vec3d, blockSelection: BlockSelection&, entitySelection: EntitySelection&, bfilter: BlockFilter, efilter: EntityFilter): nil
---@overload fun(supplier: IWorldIntersectionSupplier, fromPos: Vec3d, toPos: Vec3d, blockSelection: BlockSelection&, entitySelection: EntitySelection&, bfilter: BlockFilter, efilter: EntityFilter): nil
---@overload fun(fromPos: Vec3d, pitch: Single, yaw: Single, range: Single, blockSelection: BlockSelection&, entitySelection: EntitySelection&, bfilter: BlockFilter, efilter: EntityFilter): nil
---@overload fun(ray: Ray, blockSelection: BlockSelection&, entitySelection: EntitySelection&, filter: BlockFilter, efilter: EntityFilter): nil
---@field RegisterGameTickListener fun(onGameTick: any`1, millisecondInterval: number, initialDelayOffsetMs: number): Int64
---@field UnregisterGameTickListener fun(listenerId: Int64): nil
---@field RegisterCallback fun(OnTimePassed: any`1, millisecondDelay: number): Int64
---@field RegisterCallbackUnique fun(OnGameTick: Action`3, pos: BlockPos, millisecondInterval: number): Int64
---@field RegisterCallback fun(OnTimePassed: Action`3, pos: BlockPos, millisecondDelay: number): Int64
---@field PlayerHasPrivilege fun(clientid: number, privilege: string): boolean
---@field UnregisterCallback fun(listenerId: Int64): nil
---@field get_InteresectionTester fun(): AABBIntersectionTest
---@field HighlightBlocks fun(player: IPlayer, highlightSlotId: number, blocks: any[], colors: any[], mode: EnumHighlightBlocksMode, shape: EnumHighlightShape, scale: Single): nil
---@overload fun(player: IPlayer, highlightSlotId: number, blocks: any[], mode: EnumHighlightBlocksMode, shape: EnumHighlightShape): nil
---@field GetBlockAccessor fun(synchronize: boolean, relight: boolean, strict: boolean, debug: boolean): IBlockAccessor
---@field GetBlockAccessorBulkUpdate fun(synchronize: boolean, relight: boolean, debug: boolean): IBulkBlockAccessor
---@field GetBlockAccessorBulkMinimalUpdate fun(synchronize: boolean, debug: boolean): IBulkBlockAccessor
---@field GetBlockAccessorMapChunkLoading fun(synchronize: boolean, debug: boolean): IBulkBlockAccessor
---@field GetBlockAccessorRevertable fun(synchronize: boolean, relight: boolean, debug: boolean): IBlockAccessorRevertable
---@field GetBlockAccessorPrefetch fun(synchronize: boolean, relight: boolean): IBlockAccessorPrefetch
---@field GetCachingBlockAccessor fun(synchronize: boolean, relight: boolean): ICachingBlockAccessor
---@field GetLockFreeBlockAccessor fun(): IBlockAccessor
---@field Config ITreeAttribute
---@field DefaultSpawnPosition ITreeAttribute
---@field FrameProfiler ITreeAttribute
---@field Api ITreeAttribute
---@field Claims ITreeAttribute
---@field LoadedChunkIndices ITreeAttribute
---@field LoadedMapChunkIndices ITreeAttribute
---@field BlockLightLevels ITreeAttribute
---@field SunLightLevels ITreeAttribute
---@field SeaLevel ITreeAttribute
---@field Seed ITreeAttribute
---@field SavegameIdentifier ITreeAttribute
---@field SunBrightness ITreeAttribute
---@field EntityDebugMode ITreeAttribute
---@field AssetManager ITreeAttribute
---@field Logger ITreeAttribute
---@field Side ITreeAttribute
---@field BlockAccessor ITreeAttribute
---@field BulkBlockAccessor ITreeAttribute
---@field ClassRegistry ITreeAttribute
---@field Calendar ITreeAttribute
---@field CollisionTester ITreeAttribute
---@field Rand ITreeAttribute
---@field ElapsedMilliseconds ITreeAttribute
---@field Collectibles ITreeAttribute
---@field Blocks ITreeAttribute
---@field Items ITreeAttribute
---@field EntityTypes ITreeAttribute
---@field EntityTypeCodes ITreeAttribute
---@field GridRecipes ITreeAttribute
---@field DefaultEntityTrackingRange ITreeAttribute
---@field AllOnlinePlayers ITreeAttribute
---@field AllPlayers ITreeAttribute
---@field InteresectionTester ITreeAttribute
IWorldAccessor = {}
