---@meta HotkeyManager
---@class HotkeyManager: Object
---@field ctor fun(): HotkeyManager
---@field RegisterDefaultHotKeys fun(): nil
---@field TriggerHotKey fun(keyEventargs: KeyEvent, world: IWorldAccessor, player: IPlayer, allowCharacterControls: boolean, keyUp: boolean): boolean
---@field IsHotKeyRegistered fun(keyCombMap: KeyCombination): boolean
---@field GetHotkeyByKeyCombination fun(keyCombMap: KeyCombination): HotKey
---@field GetHotKeyByCode fun(code: string): HotKey
---@field RemoveHotKey fun(code: string): nil
---@field RegisterHotKey fun(keyComb: HotKey): nil
---@overload fun(code: string, name: string, keyComb: KeyCombination, type: Hotkeyany): nil
---@overload fun(code: string, name: string, key: GlKeys, type: Hotkeyany, altPressed: boolean, ctrlPressed: boolean, shiftPressed: boolean, insertFirst: boolean): nil
---@overload fun(code: string, name: string, button: EnumMouseButton, type: Hotkeyany, altPressed: boolean, ctrlPressed: boolean, shiftPressed: boolean, insertFirst: boolean): nil
---@overload fun(code: string, name: string, keyCode: number, type: Hotkeyany, altPressed: boolean, ctrlPressed: boolean, shiftPressed: boolean, insertFirst: boolean, triggerOnUpAlso: boolean): nil
---@overload fun(code: string, name: string, keyCode: number, keyCode2: Nullable`1, type: Hotkeyany, altPressed: boolean, ctrlPressed: boolean, shiftPressed: boolean): nil
---@field SetHotKeyHandler fun(code: string, handler: ActionConsumable`1, isIngameHotkey: boolean): nil
---@field ClearInGameHotKeyHandlers fun(): nil
---@field AddHotkeyListener fun(handler: OnHotKeyDelegate): nil
---@field OnMouseButton fun(game: ClientMain, button: EnumMouseButton, modifiers: number, buttonDown: boolean): boolean
---@field GetType fun(): any
---@field ToString fun(): string
---@field Equals fun(obj: table): boolean
---@field GetHashCode fun(): number
HotkeyManager = {}
