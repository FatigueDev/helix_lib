---@meta ServerWorldMap
---@class ServerWorldMap: WorldMap
---@field ctor fun(server: ServerMain): ServerWorldMap
---@field get_Logger fun(): ILogger
---@field get_Blocks fun(): Iany[]
---@field get_BlocksByCode fun(): table<any, any>
---@field get_ChunkSize fun(): number
---@field get_RegionSize fun(): number
---@field get_MapSize fun(): Vec3i
---@field get_MapSizeX fun(): number
---@field get_MapSizeY fun(): number
---@field get_MapSizeZ fun(): number
---@field get_RegionMapSizeX fun(): number
---@field get_RegionMapSizeY fun(): number
---@field get_RegionMapSizeZ fun(): number
---@field get_World fun(): IWorldAccessor
---@field get_ChunkSizeMask fun(): number
---@field Init fun(sizex: number, sizey: number, sizez: number): nil
---@field MapRegionPosFromIndex2D fun(index: Int64): ChunkPos
---@overload fun(index: Int64, x: number&, z: number&): nil
---@field MapChunkPosFromChunkIndex2D fun(chunkIndex2d: Int64): Vec2i
---@field PositionsToUniqueChunks fun(positions: any[]): table<any, any>
---@field GetChunkAtPos fun(posX: number, posY: number, posZ: number): IWorldChunk
---@field GetChunk fun(pos: BlockPos): WorldChunk
---@overload fun(index3d: Int64): IWorldChunk
---@field GetServerChunk fun(chunkX: number, chunkY: number, chunkZ: number): ServerChunk
---@overload fun(chunkIndex3d: Int64): ServerChunk
---@overload fun(chunkX: number, chunkY: number, chunkZ: number): IWorldChunk
---@field GetUnpackedChunkFast fun(chunkX: number, chunkY: number, chunkZ: number, notRecentlyAccessed: boolean): IWorldChunk
---@field GetChunkNonLocking fun(chunkX: number, chunkY: number, chunkZ: number): IWorldChunk
---@field GetMapRegion fun(regionX: number, regionZ: number): IMapRegion
---@overload fun(pos: BlockPos): IMapRegion
---@field GetMapChunk fun(chunkX: number, chunkZ: number): IMapChunk
---@field SendSetBlock fun(blockId: number, posX: number, posY: number, posZ: number): nil
---@field SendExchangeBlock fun(blockId: number, posX: number, posY: number, posZ: number): nil
---@field SendDecorUpdateBulk fun(updatedDecorPositions: any[]): nil
---@field SendBlockUpdateBulk fun(blockUpdates: any[], doRelight: boolean): nil
---@field SendBlockUpdateBulkMinimal fun(updates: table<any, any>): nil
---@field SendBlockUpdateExcept fun(blockId: number, posX: number, posY: number, posZ: number, clientId: number): nil
---@field GetTerrainGenSurfacePosY fun(posX: number, posZ: number): number
---@field MarkChunksDirty fun(blockPos: BlockPos, blockRange: number): nil
---@field MarkChunkDirty fun(chunkX: number, chunkY: number, chunkZ: number, priority: boolean, sunRelight: boolean, OnRetesselated: Action, fireDirtyEvent: boolean, edgeOnly: boolean): nil
---@field UpdateLighting fun(oldblockid: number, newblockid: number, pos: BlockPos): nil
---@field RemoveBlockLight fun(oldLightHsV: number[], pos: BlockPos): nil
---@field UpdateLightingAfterAbsorptionChange fun(oldAbsorption: number, newAbsorption: number, pos: BlockPos): nil
---@field UpdateLightingBulk fun(blockUpdates: table<any, any>): nil
---@field GetMaxTimeAwareLightLevelAt fun(posX: number, posY: number, posZ: number): Nullable`1
---@field PrintChunkMap fun(markChunkPos: Vec2i): nil
---@field GetBlockEntity fun(position: BlockPos): BlockEntity
---@field SpawnBlockEntity fun(classname: string, position: BlockPos, byItemStack: ItemStack): nil
---@overload fun(be: BlockEntity): nil
---@field RemoveBlockEntity fun(pos: BlockPos): nil
---@field MarkBlockModified fun(pos: BlockPos, doRelight: boolean): nil
---@field MarkBlockDirty fun(pos: BlockPos, onRetesselated: Action): nil
---@overload fun(pos: BlockPos, skipPlayer: IPlayer): nil
---@field MarkBlockEntityDirty fun(pos: BlockPos): nil
---@field MarkDecorsDirty fun(pos: BlockPos): nil
---@field TriggerNeighbourBlockUpdate fun(pos: BlockPos): nil
---@field GetClimateAt fun(pos: BlockPos, mode: EnumGetClimateMode, totalDays: Double): ClimateCondition
---@overload fun(pos: BlockPos, baseClimate: ClimateCondition, mode: EnumGetClimateMode, totalDays: Double): ClimateCondition
---@overload fun(pos: BlockPos, climate: number): ClimateCondition
---@field GetWindSpeedAt fun(pos: BlockPos): Vec3d
---@overload fun(pos: Vec3d): Vec3d
---@field getWorldGenClimateAt fun(pos: BlockPos, temperatureRainfallOnly: boolean): ClimateCondition
---@field AddWorldGenForestShrub fun(conds: ClimateCondition, mapregion: IMapRegion, pos: BlockPos): nil
---@field ChunkIndex3dToIndex2d fun(index3d: Int64): Int64
---@field GetRainFall fun(rainfall: number, y: number): number
---@field GetScaledAdjustedTemperatureFloat fun(temp: number, distToSealevel: number): Single
---@field GetFertility fun(rain: number, scaledTemp: Single, posYRel: Single): number
---@field GetFertilityFromUnscaledTemp fun(rain: number, unscaledTemp: number, posYRel: Single): number
---@field DescaleTemperature fun(temperature: Single): number
---@field DamageBlock fun(pos: BlockPos, facing: BlockFacing, damage: Single, dualCallByPlayer: IPlayer): nil
---@field Add fun(claim: LandClaim): nil
---@field Remove fun(claim: LandClaim): boolean
---@field UpdateClaim fun(oldClaim: LandClaim, newClaim: LandClaim): nil
---@field BroadcastClaims fun(allClaims: any[], addClaims: any[]): nil
---@field SendClaims fun(player: IServerPlayer, allClaims: any[], addClaims: any[]): nil
---@field get_All fun(): any[]
---@field get_DebugClaimPrivileges fun(): boolean
---@field get_ChunkMapSizeX fun(): number
---@field get_ChunkMapSizeY fun(): number
---@field get_ChunkMapSizeZ fun(): number
---@field GetLightRGBsAsInt fun(posX: number, posY: number, posZ: number): number
---@field GetLightRGBSVec4f fun(posX: number, posY: number, posZ: number): Vec4f
---@field GetLightHSVLevels fun(posX: number, posY: number, posZ: number): number[]
---@field LoadLightHSVLevels fun(posX: number, posY: number, posZ: number): number
---@field Get fun(pos: BlockPos): LandClaim[]
---@field TryAccess fun(player: IPlayer, pos: BlockPos, accessFlag: EnumBlockAccessFlags): boolean
---@field TestAccess fun(player: IPlayer, pos: BlockPos, accessFlag: EnumBlockAccessFlags): EnumWorldAccessResponse
---@field TestBlockAccess fun(player: IPlayer, blockSel: BlockSelection, accessType: EnumBlockAccessFlags): EnumWorldAccessResponse
---@overload fun(player: IPlayer, blockSel: BlockSelection, accessType: EnumBlockAccessFlags, claimant: string&): EnumWorldAccessResponse
---@field GetBlockingLandClaimant fun(forPlayer: IPlayer, pos: BlockPos, accessFlag: EnumBlockAccessFlags): string
---@field RebuildLandClaimPartitions fun(): nil
---@field MapRegionIndex2D fun(regionX: number, regionZ: number): Int64
---@field ChunkIndex3D fun(chunkX: number, chunkY: number, chunkZ: number): Int64
---@overload fun(chunkX: number, chunkY: number, chunkZ: number, dim: number): Int64
---@overload fun(pos: EntityPos): Int64
---@overload fun(cpos: ChunkPos): Int64
---@field MapChunkIndex2D fun(chunkX: number, chunkZ: number): Int64
---@field ChunkPosFromChunkIndex3D fun(chunkIndex3d: Int64): ChunkPos
---@field ChunkPosFromChunkIndex2D fun(index2d: Int64): ChunkPos
---@field ChunkSizedIndex3D fun(lX: number, lY: number, lZ: number): number
---@field IsValidPos fun(pos: BlockPos): boolean
---@overload fun(posX: number, posY: number, posZ: number): boolean
---@field IsValidChunkPos fun(chunkX: number, chunkY: number, chunkZ: number): boolean
---@field IsMovementRestrictedPos fun(posX: Double, posY: Double, posZ: Double): boolean
---@field GetType fun(): any
---@field ToString fun(): string
---@field Equals fun(obj: table): boolean
---@field GetHashCode fun(): number
---@field Logger ILogger
---@field Blocks ILogger
---@field BlocksByCode ILogger
---@field ChunkSize ILogger
---@field RegionSize ILogger
---@field MapSize ILogger
---@field MapSizeX ILogger
---@field MapSizeY ILogger
---@field MapSizeZ ILogger
---@field RegionMapSizeX ILogger
---@field RegionMapSizeY ILogger
---@field RegionMapSizeZ ILogger
---@field World ILogger
---@field ChunkSizeMask ILogger
---@field All ILogger
---@field DebugClaimPrivileges ILogger
---@field ChunkMapSizeX ILogger
---@field ChunkMapSizeY ILogger
---@field ChunkMapSizeZ ILogger
---@field chunkIlluminatorWorldGen ILogger
---@field chunkIlluminatorMainThread ILogger
---@field StrictBlockAccess ILogger
---@field RelaxedBlockAccess ILogger
---@field BulkBlockAccess ILogger
---@field RawRelaxedBlockAccess ILogger
---@field PrefetchBlockAccess ILogger
---@field LightingTasksLock ILogger
---@field LightingTasks ILogger
---@field index3dMulX ILogger
---@field chunkMapSizeY ILogger
---@field index3dMulZ ILogger
---@field BlockLightLevels ILogger
---@field BlockLightLevelsByte ILogger
---@field hueLevels ILogger
---@field satLevels ILogger
---@field SunLightLevels ILogger
---@field SunLightLevelsByte ILogger
---@field SunBrightness ILogger
---@field LandClaimByRegion ILogger
ServerWorldMap = {}
