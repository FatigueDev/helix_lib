---@meta Vec3Utilsf
---@class Vec3Utilsf: Object
---@field ctor fun(): Vec3Utilsf
---@field Create fun(): Single[]
---@field CloneIt fun(a: Single[]): Single[]
---@field FromValues fun(x: Single, y: Single, z: Single): Single[]
---@field Copy fun(output: Single[], a: Single[]): Single[]
---@field Set fun(output: Single[], x: Single, y: Single, z: Single): Single[]
---@field Add fun(output: Single[], a: Single[], b: Single[]): Single[]
---@field Substract fun(output: Single[], a: Single[], b: Single[]): Single[]
---@field Multiply fun(output: Single[], a: Single[], b: Single[]): Single[]
---@field Mul fun(output: Single[], a: Single[], b: Single[]): Single[]
---@field Divide fun(output: Single[], a: Single[], b: Single[]): Single[]
---@field Min fun(output: Single[], a: Single[], b: Single[]): Single[]
---@field Max fun(output: Single[], a: Single[], b: Single[]): Single[]
---@field Scale fun(output: Single[], a: Single[], b: Single): Single[]
---@field ScaleAndAdd fun(output: Single[], a: Single[], b: Single[], scale: Single): Single[]
---@field Distance fun(a: Single[], b: Single[]): Single
---@field SquaredDistance fun(a: Single[], b: Single[]): Single
---@field Length_ fun(a: Single[]): Single
---@field SquaredLength fun(a: Single[]): Single
---@field Negate fun(output: Single[], a: Single[]): Single[]
---@field Normalize fun(output: Single[], a: Single[]): Single[]
---@field Dot fun(a: Single[], b: Single[]): Single
---@field Cross fun(output: Single[], a: Single[], b: Single[]): Single[]
---@field Lerp fun(output: Single[], a: Single[], b: Single[], t: Single): Single[]
---@field TransformMat4 fun(output: Single[], a: Single[], m: Single[]): Single[]
---@field TransformMat3 fun(output: Single[], a: Single[], m: Single[]): Single[]
---@field TransformQuat fun(output: Single[], a: Single[], q: Single[]): Single[]
---@field GetType fun(): any
---@field ToString fun(): string
---@field Equals fun(obj: table): boolean
---@field GetHashCode fun(): number
Vec3Utilsf = {}
