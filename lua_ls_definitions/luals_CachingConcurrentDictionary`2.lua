---@meta CachingConcurrentDictionary`2
---@class CachingConcurrentDictionary`2: ConcurrentDictionary`2
---@field ctor fun(): CachingConcurrentDictionary`2
---@field get_Values fun(): Iany[]
---@field TryAdd fun(key: TKey, value: TValue): boolean
---@field TryRemove fun(key: TKey, value: TValue&): boolean
---@field get_Item fun(key: TKey): TValue
---@field set_Item fun(key: TKey, value: TValue): nil
---@overload fun(key: TKey, value: TValue): boolean
---@field ContainsKey fun(key: TKey): boolean
---@field TryRemove fun(key: TKey, value: TValue&): boolean
---@overload fun(item: KeyValuePair`2): boolean
---@field TryGetValue fun(key: TKey, value: TValue&): boolean
---@field TryUpdate fun(key: TKey, newValue: TValue, comparisonValue: TValue): boolean
---@field Clear fun(): nil
---@field ToArray fun(): KeyValuePair`2[]
---@field GetEnumerator fun(): IEnumerator`1
---@field get_Item fun(key: TKey): TValue
---@overload fun(key: TKey, value: TValue): nil
---@field get_Comparer fun(): IEqualityComparer`1
---@field get_Count fun(): number
---@field GetOrAdd fun(key: TKey, valueFactory: fun(outResult: any): any): TValue
---@overload fun(key: TKey, valueFactory: Func`3, factoryArgument: TArg): TValue
---@overload fun(key: TKey, value: TValue): TValue
---@field AddOrUpdate fun(key: TKey, addValueFactory: Func`3, updateValueFactory: Func`4, factoryArgument: TArg): TValue
---@overload fun(key: TKey, addValueFactory: fun(outResult: any): any, updateValueFactory: Func`3): TValue
---@overload fun(key: TKey, addValue: TValue, updateValueFactory: Func`3): TValue
---@field get_IsEmpty fun(): boolean
---@field get_Keys fun(): Iany[]
---@field get_Values fun(): Iany[]
---@field GetType fun(): any
---@field ToString fun(): string
---@field Equals fun(obj: table): boolean
---@field GetHashCode fun(): number
---@field Values Iany[]
---@field Item Iany[]
---@field Comparer Iany[]
---@field Count Iany[]
---@field IsEmpty Iany[]
---@field Keys Iany[]
CachingConcurrentDictionary`2 = {}
