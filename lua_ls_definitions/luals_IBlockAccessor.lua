---@meta IBlockAccessor
---@class IBlockAccessor
---@field get_ChunkSize fun(): number
---@field get_RegionSize fun(): number
---@field get_MapSizeX fun(): number
---@field get_MapSizeY fun(): number
---@field get_MapSizeZ fun(): number
---@field get_RegionMapSizeX fun(): number
---@field get_RegionMapSizeY fun(): number
---@field get_RegionMapSizeZ fun(): number
---@field get_UpdateSnowAccumMap fun(): boolean
---@field set_UpdateSnowAccumMap fun(value: boolean): nil
---@field get_MapSize fun(): Vec3i
---@field GetChunk fun(chunkX: number, chunkY: number, chunkZ: number): IWorldChunk
---@overload fun(chunkIndex3D: Int64): IWorldChunk
---@field GetMapRegion fun(regionX: number, regionZ: number): IMapRegion
---@field GetChunkAtBlockPos fun(posX: number, posY: number, posZ: number): IWorldChunk
---@overload fun(pos: BlockPos): IWorldChunk
---@field GetBlockId fun(posX: number, posY: number, posZ: number): number
---@overload fun(pos: BlockPos): number
---@field GetBlock fun(posX: number, posY: number, posZ: number): Block
---@overload fun(pos: BlockPos): Block
---@overload fun(x: number, y: number, z: number, layer: number): Block
---@overload fun(pos: BlockPos, layer: number): Block
---@field GetBlockOrNull fun(x: number, y: number, z: number, layer: number): Block
---@field GetMostSolidBlock fun(x: number, y: number, z: number): Block
---@overload fun(pos: BlockPos): Block
---@field WalkBlocks fun(minPos: BlockPos, maxPos: BlockPos, onBlock: Action`4, centerOrder: boolean): nil
---@field SearchBlocks fun(minPos: BlockPos, maxPos: BlockPos, onBlock: ActionConsumable`2, onChunkMissing: Action`3): nil
---@field SearchFluidBlocks fun(minPos: BlockPos, maxPos: BlockPos, onBlock: ActionConsumable`2, onChunkMissing: Action`3): nil
---@field WalkStructures fun(pos: BlockPos, onStructure: any`1): nil
---@overload fun(minpos: BlockPos, maxpos: BlockPos, onStructure: any`1): nil
---@field SetBlock fun(blockId: number, pos: BlockPos): nil
---@overload fun(blockId: number, pos: BlockPos, layer: number): nil
---@overload fun(blockId: number, pos: BlockPos, byItemstack: ItemStack): nil
---@field ExchangeBlock fun(blockId: number, pos: BlockPos): nil
---@field BreakBlock fun(pos: BlockPos, byPlayer: IPlayer, dropQuantityMultiplier: Single): nil
---@field DamageBlock fun(pos: BlockPos, facing: BlockFacing, damage: Single): nil
---@field GetBlock fun(blockId: number): Block
---@overload fun(code: AssetLocation): Block
---@field SpawnBlockEntity fun(classname: string, position: BlockPos, byItemStack: ItemStack): nil
---@overload fun(be: BlockEntity): nil
---@field RemoveBlockEntity fun(position: BlockPos): nil
---@field GetBlockEntity fun(position: BlockPos): BlockEntity
---@overload fun(position: BlockPos): T
---@field IsValidPos fun(posX: number, posY: number, posZ: number): boolean
---@overload fun(pos: BlockPos): boolean
---@field IsNotTraversable fun(x: Double, y: Double, z: Double): boolean
---@overload fun(pos: BlockPos): boolean
---@field Commit fun(): any[]
---@field Rollback fun(): nil
---@field MarkBlockEntityDirty fun(pos: BlockPos): nil
---@field TriggerNeighbourBlockUpdate fun(pos: BlockPos): nil
---@field MarkBlockDirty fun(pos: BlockPos, skipPlayer: IPlayer): nil
---@field MarkBlockModified fun(pos: BlockPos): nil
---@field MarkBlockDirty fun(pos: BlockPos, OnRetesselated: Action): nil
---@field GetLightLevel fun(pos: BlockPos, type: EnumLightLevelany): number
---@overload fun(x: number, y: number, z: number, type: EnumLightLevelany): number
---@field GetLightRGBs fun(posX: number, posY: number, posZ: number): Vec4f
---@overload fun(pos: BlockPos): Vec4f
---@field GetLightRGBsAsInt fun(posX: number, posY: number, posZ: number): number
---@field GetTerrainMapheightAt fun(pos: BlockPos): number
---@field GetRainMapHeightAt fun(pos: BlockPos): number
---@field GetDistanceToRainFall fun(pos: BlockPos, horziontalSearchWidth: number, verticalSearchWidth: number): number
---@field GetRainMapHeightAt fun(posX: number, posZ: number): number
---@field GetMapChunk fun(chunkPos: Vec2i): IMapChunk
---@overload fun(chunkX: number, chunkZ: number): IMapChunk
---@field GetMapChunkAtBlockPos fun(pos: BlockPos): IMapChunk
---@field GetClimateAt fun(pos: BlockPos, mode: EnumGetClimateMode, totalDays: Double): ClimateCondition
---@overload fun(pos: BlockPos, baseClimate: ClimateCondition, mode: EnumGetClimateMode, totalDays: Double): ClimateCondition
---@overload fun(pos: BlockPos, climate: number): ClimateCondition
---@field GetWindSpeedAt fun(pos: Vec3d): Vec3d
---@overload fun(pos: BlockPos): Vec3d
---@field MarkAbsorptionChanged fun(oldAbsorption: number, newAbsorption: number, pos: BlockPos): nil
---@field RemoveBlockLight fun(oldLightHsV: number[], pos: BlockPos): nil
---@field SetDecor fun(block: Block, position: BlockPos, onFace: BlockFacing): boolean
---@overload fun(block: Block, position: BlockPos, decorIndex: number): boolean
---@field GetDecors fun(position: BlockPos): Block[]
---@field GetDecor fun(pos: BlockPos, decorIndex: number): Block
---@field BreakDecor fun(pos: BlockPos, side: BlockFacing, decorIndex: Nullable`1): boolean
---@field MarkChunkDecorsModified fun(pos: BlockPos): nil
---@field IsSideSolid fun(x: number, y: number, z: number, facing: BlockFacing): boolean
---@field CreateMiniDimension fun(position: Vec3d): IMiniDimension
---@field ChunkSize number
---@field RegionSize number
---@field MapSizeX number
---@field MapSizeY number
---@field MapSizeZ number
---@field RegionMapSizeX number
---@field RegionMapSizeY number
---@field RegionMapSizeZ number
---@field UpdateSnowAccumMap number
---@field MapSize number
IBlockAccessor = {}
