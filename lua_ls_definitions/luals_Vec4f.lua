---@meta Vec4f
---@class Vec4f: Object
---@field ctor fun(): Vec4f
---@overload fun(x: Single, y: Single, z: Single, w: Single): Vec4f
---@field get_R fun(): Single
---@field set_R fun(value: Single): nil
---@field get_G fun(): Single
---@field set_G fun(value: Single): nil
---@field get_B fun(): Single
---@field set_B fun(value: Single): nil
---@field get_A fun(): Single
---@field set_A fun(value: Single): nil
---@field get_XYZ fun(): Vec3f
---@field get_Item fun(index: number): Single
---@field set_Item fun(index: number, value: Single): nil
---@field Set fun(vec: Single[]): Vec4f
---@overload fun(vec: Vec4f): Vec4f
---@field Mul fun(vec: Vec4f): Vec4f
---@field Set fun(x: Single, y: Single, z: Single, w: Single): Vec4f
---@field Clone fun(): Vec4f
---@field NormalizeXYZ fun(): Vec4f
---@field LengthXYZ fun(): Single
---@field op_Subtraction fun(left: Vec4f, right: Vec4f): Vec4f
---@field op_Addition fun(left: Vec4f, right: Vec4f): Vec4f
---@overload fun(left: Vec4f, right: Vec4i): Vec4f
---@overload fun(left: Vec4f, right: Single): Vec4f
---@overload fun(left: Single, right: Vec4f): Vec4f
---@overload fun(left: Vec4f, right: Single): Vec4f
---@field op_Multiply fun(left: Vec4f, right: Single): Vec4f
---@overload fun(left: Single, right: Vec4f): Vec4f
---@overload fun(left: Vec4f, right: Vec4f): Double
---@field op_Division fun(left: Vec4f, right: Single): Vec4f
---@field GetType fun(): any
---@field ToString fun(): string
---@field Equals fun(obj: table): boolean
---@field GetHashCode fun(): number
---@field R Single
---@field G Single
---@field B Single
---@field A Single
---@field XYZ Single
---@field Item Single
---@field X Single
---@field Y Single
---@field Z Single
---@field W Single
Vec4f = {}
