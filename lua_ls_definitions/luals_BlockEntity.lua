---@meta BlockEntity
---@class BlockEntity: Object
---@field ctor fun(): BlockEntity
---@field get_Block fun(): Block
---@field set_Block fun(value: Block): nil
---@field GetBehavior fun(): T
---@field Initialize fun(api: ICoreAPI): nil
---@field CreateBehaviors fun(block: Block, worldForResolve: IWorldAccessor): nil
---@field RegisterGameTickListener fun(onGameTick: any`1, millisecondInterval: number, initialDelayOffsetMs: number): Int64
---@field UnregisterGameTickListener fun(listenerId: Int64): nil
---@field RegisterDelayedCallback fun(OnDelayedCallbackTick: any`1, millisecondInterval: number): Int64
---@field UnregisterDelayedCallback fun(listenerId: Int64): nil
---@field TickingExceptionHandler fun(e: Exception): nil
---@field OnBlockRemoved fun(): nil
---@field OnExchanged fun(block: Block): nil
---@field OnBlockBroken fun(byPlayer: IPlayer): nil
---@field HistoryStateRestore fun(): nil
---@field OnBlockUnloaded fun(): nil
---@field OnBlockPlaced fun(byItemStack: ItemStack): nil
---@field ToTreeAttributes fun(tree: ITreeAttribute): nil
---@field FromTreeAttributes fun(tree: ITreeAttribute, worldAccessForResolve: IWorldAccessor): nil
---@field OnReceivedClientPacket fun(fromPlayer: IPlayer, packetid: number, data: number[]): nil
---@field OnReceivedServerPacket fun(packetid: number, data: number[]): nil
---@field MarkDirty fun(redrawOnClient: boolean, skipPlayer: IPlayer): nil
---@field GetBlockInfo fun(forPlayer: IPlayer, dsc: stringBuilder): nil
---@field OnStoreCollectibleMappings fun(blockIdMapping: table<any, any>, itemIdMapping: table<any, any>): nil
---@field OnLoadCollectibleMappings fun(worldForNewMappings: IWorldAccessor, oldBlockIdMapping: table<any, any>, oldItemIdMapping: table<any, any>, schematicSeed: number): nil
---@overload fun(worldForNewMappings: IWorldAccessor, oldBlockIdMapping: table<any, any>, oldItemIdMapping: table<any, any>, schematicSeed: number, resolveImports: boolean): nil
---@field OnTesselation fun(mesher: ITerrainMeshPool, tessThreadTesselator: ITesselatorAPI): boolean
---@field OnPlacementBySchematic fun(api: ICoreServerAPI, blockAccessor: IBlockAccessor, pos: BlockPos, replaceBlocks: table<any, any>, centerrockblockid: number, layerBlock: Block, resolveImports: boolean): nil
---@field GetType fun(): any
---@field ToString fun(): string
---@field Equals fun(obj: table): boolean
---@field GetHashCode fun(): number
---@field Block Block
---@field Api Block
---@field Pos Block
---@field Behaviors Block
BlockEntity = {}
