---@meta ITesselatorAPI
---@class ITesselatorAPI
---@field TesselateBlock fun(block: Block, modeldata: MeshData&): nil
---@field TesselateItem fun(item: Item, modeldata: MeshData&): nil
---@overload fun(item: Item, forShape: CompositeShape, modeldata: MeshData&): nil
---@overload fun(item: Item, modeldata: MeshData&, texSource: ITexPositionSource): nil
---@field TesselateShape fun(type: string, name: AssetLocation, compositeShape: CompositeShape, modeldata: MeshData&, texSource: ITexPositionSource, generalGlowLevel: number, climateColorMapIndex: number, seasonColorMapIndex: number, quantityElements: Nullable`1, selectiveElements: string[]): nil
---@overload fun(textureSourceCollectible: Collectibletable, shape: Shape, modeldata: MeshData&, meshRotationDeg: Vec3f, quantityElements: Nullable`1, selectiveElements: string[]): nil
---@overload fun(typeForLogging: string, shapeBase: Shape, modeldata: MeshData&, texSource: ITexPositionSource, meshRotationDeg: Vec3f, generalGlowLevel: number, climateColorMapId: number, seasonColorMapId: number, quantityElements: Nullable`1, selectiveElements: string[]): nil
---@field TesselateShapeWithJointIds fun(typeForLogging: string, shapeBase: Shape, modeldata: MeshData&, texSource: ITexPositionSource, rotation: Vec3f, quantityElements: Nullable`1, selectiveElements: string[]): nil
---@field TesselateShape fun(meta: TesselationMetaData, shapeBase: Shape, modeldata: MeshData&): nil
---@field VoxelizeTexture fun(texture: CompositeTexture, atlasSize: Size2i, atlasPos: TextureAtlasPosition): MeshData
---@overload fun(texturePixels: number[], width: number, height: number, atlasSize: Size2i, pos: TextureAtlasPosition): MeshData
---@field GetTextureSource fun(block: Block, altTextureNumber: number, returnNullWhenMissing: boolean): ITexPositionSource
---@field GetTexSource fun(block: Block, altTextureNumber: number, returnNullWhenMissing: boolean): ITexPositionSource
---@field GetTextureSource fun(item: Item, returnNullWhenMissing: boolean): ITexPositionSource
---@overload fun(entity: Entity, extraTextures: table<any, any>, altTextureNumber: number, returnNullWhenMissing: boolean): ITexPositionSource
ITesselatorAPI = {}
