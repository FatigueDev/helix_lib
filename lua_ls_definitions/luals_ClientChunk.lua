---@meta ClientChunk
---@class ClientChunk: WorldChunk
---@field IsTraversable fun(from: BlockFacing, to: BlockFacing): boolean
---@field SetTraversable fun(from: number, to: number): nil
---@field ClearTraversable fun(): nil
---@field get_ModData fun(): table<any, any>
---@field set_ModData fun(value: table<any, any>): nil
---@field get_LightPositions fun(): HashSet`1
---@field set_LightPositions fun(value: HashSet`1): nil
---@field get_MapChunk fun(): IMapChunk
---@field get_LoadedFromServer fun(): boolean
---@field CreateNew fun(datapool: ClientChunkDataPool): ClientChunk
---@field CreateNewCompressed fun(datapool: ChunkDataPool, blocksCompressed: number[], lightCompressed: number[], lightSatCompressed: number[], fluidsCompressed: number[], moddata: number[], compver: number): ClientChunk
---@field ChunkHasData fun(): boolean
---@field TemporaryUnpack fun(blocks: number[]): boolean
---@field FinishLightDoubleBuffering fun(): nil
---@field get_blocksCompressed fun(): number[]
---@field set_blocksCompressed fun(value: number[]): nil
---@field get_lightCompressed fun(): number[]
---@field set_lightCompressed fun(value: number[]): nil
---@field get_lightSatCompressed fun(): number[]
---@field set_lightSatCompressed fun(value: number[]): nil
---@field get_fluidsCompressed fun(): number[]
---@field set_fluidsCompressed fun(value: number[]): nil
---@field get_EntitiesCount fun(): number
---@field set_EntitiesCount fun(value: number): nil
---@field get_Blocks fun(): IChunkBlocks
---@field get_Data fun(): IChunkBlocks
---@field get_Lighting fun(): IChunkLight
---@field get_MaybeBlocks fun(): IChunkBlocks
---@field set_MaybeBlocks fun(value: IChunkBlocks): nil
---@field get_Empty fun(): boolean
---@field set_Empty fun(value: boolean): nil
---@field MarkModified fun(): nil
---@field IsPacked fun(): boolean
---@field TryPackAndCommit fun(chunkTTL: number): nil
---@field Pack fun(): nil
---@field TryCommitPackAndFree fun(chunkTTL: number): boolean
---@field Unpack fun(): nil
---@field Unpack_ReadOnly fun(): boolean
---@field UnpackAndReadBlock fun(index: number, layer: number): number
---@field Unpack_AndReadLight fun(index: number): UInt16
---@overload fun(index: number, lightSat: number&): UInt16
---@field Unpack_MaybeNullData fun(): nil
---@field AcquireBlockReadLock fun(): nil
---@field ReleaseBlockReadLock fun(): nil
---@field UpdateEmptyFlag fun(): nil
---@field MarkFresh fun(): nil
---@field get_Disposed fun(): boolean
---@field set_Disposed fun(value: boolean): nil
---@field get_LiveModData fun(): table<any, any>
---@field set_LiveModData fun(value: table<any, any>): nil
---@field RemoveBlockEntity fun(pos: BlockPos): boolean
---@field AddEntity fun(entity: Entity): nil
---@field RemoveEntity fun(entityId: Int64): boolean
---@field SetModdata fun(key: string, data: number[]): nil
---@field RemoveModdata fun(key: string): nil
---@field GetModdata fun(key: string): number[]
---@overload fun(key: string, data: T): nil
---@overload fun(key: string, defaultValue: T): T
---@field Dispose fun(): nil
---@field GetLocalBlockAtBlockPos fun(world: IWorldAccessor, position: BlockPos): Block
---@overload fun(world: IWorldAccessor, posX: number, posY: number, posZ: number, layer: number): Block
---@field GetLocalBlockAtBlockPos_LockFree fun(world: IWorldAccessor, pos: BlockPos, layer: number): Block
---@field GetLocalBlockEntityAtBlockPos fun(position: BlockPos): BlockEntity
---@field GetLightAbsorptionAt fun(index3d: number, blockPos: BlockPos, blockTypes: Iany[]): number
---@field SetDecor fun(block: Block, index3d: number, onFace: BlockFacing): boolean
---@overload fun(block: Block, index3d: number, decorIndex: number): boolean
---@field GetDecors fun(blockAccessor: IBlockAccessor, position: BlockPos): Block[]
---@field GetDecor fun(blockAccessor: IBlockAccessor, position: BlockPos, faceAndSubposition: number): Block
---@field BreakDecor fun(world: IWorldAccessor, pos: BlockPos, side: BlockFacing, faceAndSubposition: Nullable`1): boolean
---@field BreakDecorPart fun(world: IWorldAccessor, pos: BlockPos, side: BlockFacing, faceAndSubposition: number): boolean
---@field RemoveDecorPart fun(world: IWorldAccessor, pos: BlockPos, side: BlockFacing, faceAndSubposition: number): boolean
---@field BreakAllDecorFast fun(world: IWorldAccessor, pos: BlockPos, index3d: number, callOnBrokenAsDecor: boolean): nil
---@field AdjustSelectionBoxForDecor fun(blockAccessor: IBlockAccessor, position: BlockPos, orig: Cuboidf[]): Cuboidf[]
---@field GetDecorSelectionBoxes fun(blockAccessor: IBlockAccessor, position: BlockPos): any[]
---@field SetDecors fun(newDecors: table<any, any>): nil
---@field GetType fun(): any
---@field ToString fun(): string
---@field Equals fun(obj: table): boolean
---@field GetHashCode fun(): number
---@field ModData table<any, any>
---@field LightPositions table<any, any>
---@field MapChunk table<any, any>
---@field LoadedFromServer table<any, any>
---@field blocksCompressed table<any, any>
---@field lightCompressed table<any, any>
---@field lightSatCompressed table<any, any>
---@field fluidsCompressed table<any, any>
---@field EntitiesCount table<any, any>
---@field Blocks table<any, any>
---@field Data table<any, any>
---@field Lighting table<any, any>
---@field MaybeBlocks table<any, any>
---@field Empty table<any, any>
---@field Disposed table<any, any>
---@field LiveModData table<any, any>
---@field clientmapchunk table<any, any>
---@field traversability table<any, any>
---@field traversabilityFresh table<any, any>
---@field CullVisible table<any, any>
---@field ReadWriteStopWatch table<any, any>
---@field traversabilityMapping table<any, any>
---@field bufIndex table<any, any>
---@field WasModified table<any, any>
---@field lastReadOrWrite table<any, any>
---@field blocksCompressedTmp table<any, any>
---@field lightCompressedTmp table<any, any>
---@field lightSatCompressedTmp table<any, any>
---@field fluidsCompressedTmp table<any, any>
---@field Entities table<any, any>
---@field BlockEntities table<any, any>
---@field Decors table<any, any>
ClientChunk = {}
