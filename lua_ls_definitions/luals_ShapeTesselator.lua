---@meta ShapeTesselator
---@class ShapeTesselator: Object
---@field ctor fun(game: ClientMain, shapes: Orderedtable<any, any>, objs: Orderedtable<any, any>, gltfs: Orderedtable<any, any>): ShapeTesselator
---@field TesselateShape fun(type: string, name: AssetLocation, compositeShape: CompositeShape, modeldata: MeshData&, texSource: ITexPositionSource, generalGlowLevel: number, climateColorMapIndex: number, seasonColorMapIndex: number, quantityElements: Nullable`1, selectiveElements: string[]): nil
---@overload fun(collObj: Collectibletable, shape: Shape, modeldata: MeshData&, rotation: Vec3f, quantityElements: Nullable`1, selectiveElements: string[]): nil
---@overload fun(typeForLogging: string, shapeBase: Shape, modeldata: MeshData&, texSource: ITexPositionSource, wholeMeshRotation: Vec3f, generalGlowLevel: number, climateColorMapId: number, seasonColorMapId: number, quantityElements: Nullable`1, selectiveElements: string[]): nil
---@field TesselateShapeWithJointIds fun(typeForLogging: string, shapeBase: Shape, modeldata: MeshData&, texSource: ITexPositionSource, rotation: Vec3f, quantityElements: Nullable`1, selectiveElements: string[]): nil
---@field TesselateShape fun(meta: TesselationMetaData, shapeBase: Shape, modeldata: MeshData&): nil
---@overload fun(shapeBase: Shape, modeldata: MeshData&, wholeMeshRotation: Vec3f, wholeMeshOffset: Vec3f, wholeMeshScale: Single, meta: TesselationMetaData): nil
---@field TesselateBlock fun(block: Block, meshdata: MeshData&): nil
---@overload fun(block: Block, modeldata: MeshData&, textureSource: TextureSource, quantityElements: Nullable`1, selectiveElements: string[]): nil
---@overload fun(block: Block, compositeShape: CompositeShape, modeldata: MeshData&, texSource: TextureSource, quantityElements: Nullable`1, selectiveElements: string[]): nil
---@field TesselateItem fun(item: Item, modeldata: MeshData&, texSource: ITexPositionSource): nil
---@overload fun(item: Item, modeldata: MeshData&): nil
---@overload fun(item: Item, forShape: CompositeShape, modeldata: MeshData&): nil
---@field VoxelizeTextureStatic fun(texturePixels: number[], width: number, height: number, pos: TextureAtlasPosition, rotation: Vec3f): MeshData
---@field VoxelizeTexture fun(texture: CompositeTexture, atlasSize: Size2i, atlasPos: TextureAtlasPosition): MeshData
---@overload fun(texturePixels: number[], width: number, height: number, atlasSize: Size2i, atlasPos: TextureAtlasPosition): MeshData
---@field AltTexturesCount fun(block: Block): number
---@field TileTexturesCount fun(block: Block): number
---@field GetTexSource fun(block: Block, altTextureNumber: number, returnNullWhenMissing: boolean): ITexPositionSource
---@field GetTextureSource fun(block: Block, altTextureNumber: number, returnNullWhenMissing: boolean): ITexPositionSource
---@overload fun(item: Item, returnNullWhenMissing: boolean): ITexPositionSource
---@overload fun(entity: Entity, extraTextures: table<any, any>, altTextureNumber: number, returnNullWhenMissing: boolean): ITexPositionSource
---@field ApplyCompositeShapeModifiers fun(modeldata: MeshData&, compositeShape: CompositeShape): nil
---@field GetType fun(): any
---@field ToString fun(): string
---@field Equals fun(obj: table): boolean
---@field GetHashCode fun(): number
ShapeTesselator = {}
