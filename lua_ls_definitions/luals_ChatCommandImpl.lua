---@meta ChatCommandImpl
---@class ChatCommandImpl: Object
---@field ctor fun(cmdapi: ChatCommandApi, name: string, parent: ChatCommandImpl): ChatCommandImpl
---@field get_Incomplete fun(): boolean
---@field get_Aliases fun(): any[]
---@field get_RootAliases fun(): any[]
---@field get_CommandPrefix fun(): string
---@field get_Name fun(): string
---@field get_Description fun(): string
---@field get_AdditionalInformation fun(): string
---@field get_Examples fun(): string[]
---@field GetPrivilege fun(): string
---@field get_FullName fun(): string
---@field GetFullName fun(alias: string, isRootAlias: boolean): string
---@field get_Item fun(name: string): IChatCommand
---@field EndSubCommand fun(): IChatCommand
---@field HandleWith fun(handler: OnCommandDelegate): IChatCommand
---@field RequiresPrivilege fun(privilege: string): IChatCommand
---@field WithDescription fun(description: string): IChatCommand
---@field WithAdditionalInformation fun(text: string): IChatCommand
---@field WithName fun(commandName: string): IChatCommand
---@field WithRootAlias fun(commandName: string): IChatCommand
---@field BeginSub fun(name: string): IChatCommand
---@field EndSub fun(): IChatCommand
---@field BeginSubCommand fun(name: string): IChatCommand
---@field BeginSubCommands fun(names: string[]): IChatCommand
---@field WithSubCommand fun(name: string, desc: string, handler: OnCommandDelegate, parsers: ICommandArgumentParser[]): IChatCommand
---@field WithArgs fun(parsers: ICommandArgumentParser[]): IChatCommand
---@field Execute fun(callargs: TextCommandCallingArgs, onCommandComplete: any`1): nil
---@field WithPreCondition fun(precond: CommandPreconditionDelegate): IChatCommand
---@field WithAlias fun(names: string[]): IChatCommand
---@field GroupWith fun(name: string[]): IChatCommand
---@field WithExamples fun(examples: string[]): IChatCommand
---@field RequiresPlayer fun(): IChatCommand
---@field Validate fun(): nil
---@field get_AnyPrivilegeSet fun(): boolean
---@field IsAvailableTo fun(caller: Caller): boolean
---@field IgnoreAdditionalArgs fun(): IChatCommand
---@field GetFullSyntaxHandbook fun(caller: Caller, indent: string, isRootAlias: boolean): string
---@field GetFullSyntaxConsole fun(caller: Caller): string
---@field WriteCommandsListHandbook fun(text: stringBuilder, commands: table<any, any>, caller: Caller, indent: string): nil
---@field WriteCommandsList fun(text: stringBuilder, commands: table<any, any>, caller: Caller, isSubCommand: boolean): nil
---@field GetCallSyntax fun(name: string, isRootAlias: boolean): string
---@field GetCallSyntaxUnformatted fun(name: string, isRootAlias: boolean): string
---@field get_CallSyntax fun(): string
---@field get_CallSyntaxUnformatted fun(): string
---@field AddParameterSyntax fun(sb: stringBuilder, indent: string): nil
---@field AddParameterSyntaxUnformatted fun(sb: stringBuilder, indent: string): nil
---@field AddSyntaxExplanation fun(sb: stringBuilder, indent: string): nil
---@field get_Subcommands fun(): any[]
---@field get_AllSubcommands fun(): table<any, any>
---@field GetType fun(): any
---@field ToString fun(): string
---@field Equals fun(obj: table): boolean
---@field GetHashCode fun(): number
---@field Incomplete boolean
---@field Aliases boolean
---@field RootAliases boolean
---@field CommandPrefix boolean
---@field Name boolean
---@field Description boolean
---@field AdditionalInformation boolean
---@field Examples boolean
---@field FullName boolean
---@field Item boolean
---@field AnyPrivilegeSet boolean
---@field CallSyntax boolean
---@field CallSyntaxUnformatted boolean
---@field Subcommands boolean
---@field AllSubcommands boolean
ChatCommandImpl = {}
