---@meta Cuboidi
---@class Cuboidi: Object
---@field ctor fun(): Cuboidi
---@overload fun(coordinates: number[]): Cuboidi
---@overload fun(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): Cuboidi
---@overload fun(startPos: BlockPos, endPos: BlockPos): Cuboidi
---@overload fun(startPos: Vec3i, endPos: Vec3i): Cuboidi
---@overload fun(startPos: BlockPos, size: number): Cuboidi
---@field get_Coordinates fun(): number[]
---@field get_MinX fun(): number
---@field get_MinY fun(): number
---@field get_MinZ fun(): number
---@field get_MaxX fun(): number
---@field get_MaxY fun(): number
---@field get_MaxZ fun(): number
---@field get_SizeX fun(): number
---@field get_SizeY fun(): number
---@field get_SizeZ fun(): number
---@field get_SizeXYZ fun(): number
---@field get_SizeXZ fun(): number
---@field get_Start fun(): Vec3i
---@field get_End fun(): Vec3i
---@field get_Center fun(): Vec3i
---@field get_CenterX fun(): number
---@field get_CenterY fun(): number
---@field get_CenterZ fun(): number
---@field get_Volume fun(): number
---@field Set fun(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): Cuboidi
---@overload fun(min: IVec3, max: IVec3): Cuboidi
---@field Translate fun(posX: number, posY: number, posZ: number): Cuboidi
---@overload fun(vec: IVec3): Cuboidi
---@field Sub fun(posX: number, posY: number, posZ: number): Cuboidi
---@field Div fun(value: number): Cuboidi
---@field Sub fun(vec: IVec3): Cuboidi
---@field Contains fun(pos: Vec3d): boolean
---@overload fun(pos: IVec3): boolean
---@overload fun(x: number, y: number, z: number): boolean
---@overload fun(x: number, z: number): boolean
---@overload fun(pos: BlockPos): boolean
---@field ContainsOrTouches fun(x: number, y: number, z: number): boolean
---@overload fun(cuboid: Cuboidi): boolean
---@overload fun(pos: BlockPos): boolean
---@overload fun(vec: IVec3): boolean
---@overload fun(pos: EntityPos): boolean
---@field GrowToInclude fun(x: number, y: number, z: number): Cuboidi
---@overload fun(vec: IVec3): Cuboidi
---@field GrowBy fun(dx: number, dy: number, dz: number): Cuboidi
---@field ShortestDistanceFrom fun(x: number, y: number, z: number): Double
---@overload fun(vec: IVec3): Double
---@overload fun(cuboid: Cuboidi): Double
---@field pushOutX fun(from: Cuboidi, x: number, direction: EnumPushDirection&): Double
---@field pushOutY fun(from: Cuboidi, y: number, direction: EnumPushDirection&): Double
---@field pushOutZ fun(from: Cuboidi, z: number, direction: EnumPushDirection&): Double
---@field RotatedCopy fun(degX: number, degY: number, degZ: number, origin: Vec3d): Cuboidi
---@overload fun(vec: IVec3, origin: Vec3d): Cuboidi
---@field OffsetCopy fun(x: number, y: number, z: number): Cuboidi
---@overload fun(vec: IVec3): Cuboidi
---@field Intersects fun(with: Cuboidi): boolean
---@overload fun(with: HorRectanglei): boolean
---@field IntersectsOrTouches fun(with: Cuboidi): boolean
---@field Clone fun(): Cuboidi
---@field Equals fun(other: Cuboidi): boolean
---@overload fun(obj: table): boolean
---@field ToString fun(): string
---@field GetHashCode fun(): number
---@field GetType fun(): any
---@field Coordinates number[]
---@field MinX number[]
---@field MinY number[]
---@field MinZ number[]
---@field MaxX number[]
---@field MaxY number[]
---@field MaxZ number[]
---@field SizeX number[]
---@field SizeY number[]
---@field SizeZ number[]
---@field SizeXYZ number[]
---@field SizeXZ number[]
---@field Start number[]
---@field End number[]
---@field Center number[]
---@field CenterX number[]
---@field CenterY number[]
---@field CenterZ number[]
---@field Volume number[]
---@field X1 number[]
---@field Y1 number[]
---@field Z1 number[]
---@field X2 number[]
---@field Y2 number[]
---@field Z2 number[]
Cuboidi = {}
