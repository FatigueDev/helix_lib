---@meta Enum
---@class Enum: ValueType
---@field GetName fun(value: TEnum): string
---@overload fun(enumType: any, value: table): string
---@field GetNames fun(): string[]
---@overload fun(enumType: any): string[]
---@field GetUnderlyingType fun(enumType: any): any
---@field GetValues fun(): TEnum[]
---@overload fun(enumType: any): Array
---@field GetValuesAsUnderlyingType fun(): Array
---@overload fun(enumType: any): Array
---@field HasFlag fun(flag: Enum): boolean
---@field IsDefined fun(value: TEnum): boolean
---@overload fun(enumType: any, value: table): boolean
---@field Parse fun(enumType: any, value: string): table
---@overload fun(enumType: any, value: ReadOnlySpan`1): table
---@overload fun(enumType: any, value: string, ignoreCase: boolean): table
---@overload fun(enumType: any, value: ReadOnlySpan`1, ignoreCase: boolean): table
---@overload fun(value: string): TEnum
---@overload fun(value: ReadOnlySpan`1): TEnum
---@overload fun(value: string, ignoreCase: boolean): TEnum
---@overload fun(value: ReadOnlySpan`1, ignoreCase: boolean): TEnum
---@field TryParse fun(enumType: any, value: string, result: table&): boolean
---@overload fun(enumType: any, value: ReadOnlySpan`1, result: table&): boolean
---@overload fun(enumType: any, value: string, ignoreCase: boolean, result: table&): boolean
---@overload fun(enumType: any, value: ReadOnlySpan`1, ignoreCase: boolean, result: table&): boolean
---@overload fun(value: string, result: TEnum&): boolean
---@overload fun(value: ReadOnlySpan`1, result: TEnum&): boolean
---@overload fun(value: string, ignoreCase: boolean, result: TEnum&): boolean
---@overload fun(value: ReadOnlySpan`1, ignoreCase: boolean, result: TEnum&): boolean
---@field ToObject fun(enumType: any, value: table): table
---@field Format fun(enumType: any, value: table, format: string): string
---@field Equals fun(obj: table): boolean
---@field GetHashCode fun(): number
---@field ToString fun(): string
---@field CompareTo fun(target: table): number
---@field ToString fun(format: string, provider: IFormatProvider): string
---@overload fun(format: string): string
---@overload fun(provider: IFormatProvider): string
---@field GetTypeCode fun(): anyCode
---@field ToObject fun(enumType: any, value: Snumber): table
---@overload fun(enumType: any, value: Int16): table
---@overload fun(enumType: any, value: number): table
---@overload fun(enumType: any, value: number): table
---@overload fun(enumType: any, value: UInt16): table
---@overload fun(enumType: any, value: Unumber): table
---@overload fun(enumType: any, value: Int64): table
---@overload fun(enumType: any, value: UInt64): table
---@field GetType fun(): any
Enum = {}
