---@meta EntityBehavior
---@class EntityBehavior: Object
---@field ctor fun(entity: Entity): EntityBehavior
---@field get_ProfilerName fun(): string
---@field Initialize fun(properties: EntityProperties, attributes: Jsontable): nil
---@field AfterInitialized fun(onFirstSpawn: boolean): nil
---@field OnGameTick fun(deltaTime: Single): nil
---@field OnEntitySpawn fun(): nil
---@field OnEntityLoaded fun(): nil
---@field OnEntityDespawn fun(despawn: EntityDespawnData): nil
---@field PropertyName fun(): string
---@field OnEntityReceiveDamage fun(damageSource: DamageSource, damage: Single&): nil
---@field OnEntityRevive fun(): nil
---@field OnFallToGround fun(lastTerrainContact: Vec3d, withYMotion: Double): nil
---@field OnEntityReceiveSaturation fun(saturation: Single, foodCat: EnumFoodCategory, saturationLossDelay: Single, nutritionGainMultiplier: Single): nil
---@field OnReceivedServerPos fun(isTeleport: boolean, handled: EnumHandling&): nil
---@field GetDrops fun(world: IWorldAccessor, pos: BlockPos, byPlayer: IPlayer, handling: EnumHandling&): ItemStack[]
---@field OnStateChanged fun(beforeState: EnumEntityState, handling: EnumHandling&): nil
---@field Notify fun(key: string, data: table): nil
---@field GetInfoText fun(infotext: stringBuilder): nil
---@field OnEntityDeath fun(damageSourceForDeath: DamageSource): nil
---@field OnInteract fun(byEntity: EntityAgent, itemslot: ItemSlot, hitPosition: Vec3d, mode: EnumInteractMode, handled: EnumHandling&): nil
---@field OnReceivedClientPacket fun(player: IServerPlayer, packetid: number, data: number[], handled: EnumHandling&): nil
---@field OnReceivedServerPacket fun(packetid: number, data: number[], handled: EnumHandling&): nil
---@field OnNoPath fun(target: Vec3d): nil
---@field GetInteractionHelp fun(world: IClientWorldAccessor, es: EntitySelection, player: IClientPlayer, handled: EnumHandling&): WorldInteraction[]
---@field DidAttack fun(source: DamageSource, targetEntity: EntityAgent, handled: EnumHandling&): nil
---@field OnStoreCollectibleMappings fun(blockIdMapping: table<any, any>, itemIdMapping: table<any, any>): nil
---@field OnLoadCollectibleMappings fun(worldForNewMappings: IWorldAccessor, oldBlockIdMapping: table<any, any>, oldItemIdMapping: table<any, any>): nil
---@overload fun(worldForNewMappings: IWorldAccessor, oldBlockIdMapping: table<any, any>, oldItemIdMapping: table<any, any>, resolveImports: boolean): nil
---@field ToBytes fun(forClient: boolean): nil
---@field FromBytes fun(isSync: boolean): nil
---@field TestCommand fun(arg: table): nil
---@field GetType fun(): any
---@field ToString fun(): string
---@field Equals fun(obj: table): boolean
---@field GetHashCode fun(): number
---@field ProfilerName string
---@field entity string
EntityBehavior = {}
