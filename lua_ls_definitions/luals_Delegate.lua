---@meta Delegate
---@class Delegate: Object
---@field Equals fun(obj: table): boolean
---@field GetHashCode fun(): number
---@field get_Target fun(): table
---@field CreateDelegate fun(type: any, target: table, method: string, ignoreCase: boolean, throwOnBindFailure: boolean): Delegate
---@overload fun(type: any, target: any, method: string, ignoreCase: boolean, throwOnBindFailure: boolean): Delegate
---@overload fun(type: any, method: MethodInfo, throwOnBindFailure: boolean): Delegate
---@overload fun(type: any, firstArgument: table, method: MethodInfo, throwOnBindFailure: boolean): Delegate
---@field Clone fun(): table
---@field Combine fun(a: Delegate, b: Delegate): Delegate
---@overload fun(delegates: Delegate[]): Delegate
---@overload fun(type: any, firstArgument: table, method: MethodInfo): Delegate
---@overload fun(type: any, method: MethodInfo): Delegate
---@overload fun(type: any, target: table, method: string): Delegate
---@overload fun(type: any, target: table, method: string, ignoreCase: boolean): Delegate
---@overload fun(type: any, target: any, method: string): Delegate
---@overload fun(type: any, target: any, method: string, ignoreCase: boolean): Delegate
---@field GetInvocationList fun(): Delegate[]
---@field DynamicInvoke fun(args: table[]): table
---@field GetObjectData fun(info: SerializationInfo, context: StreamingContext): nil
---@field get_Method fun(): MethodInfo
---@field Remove fun(source: Delegate, value: Delegate): Delegate
---@field RemoveAll fun(source: Delegate, value: Delegate): Delegate
---@field op_Equality fun(d1: Delegate, d2: Delegate): boolean
---@field op_Inequality fun(d1: Delegate, d2: Delegate): boolean
---@field GetType fun(): any
---@field ToString fun(): string
---@field Target table
---@field Method table
Delegate = {}
